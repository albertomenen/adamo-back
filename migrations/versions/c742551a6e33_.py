"""empty message

Revision ID: c742551a6e33
Revises: 4c5ca58ec5b2
Create Date: 2021-08-23 14:10:11.972881

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c742551a6e33'
down_revision = '4c5ca58ec5b2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('date')
    op.drop_table('location_timetable')
    op.drop_table('user_timetable')
    op.drop_table('timetable')
    op.drop_column('role', 'manage_timetables')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('role', sa.Column('manage_timetables', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.create_table('timetable',
    sa.Column('id_timetable', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('id_group', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('from_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('to_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('monday', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('tuesday', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('wednesday', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('thursday', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('friday', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('saturday', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('sunday', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('priority', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id_group'], ['group.id_group'], name='timetable_id_group_fkey'),
    sa.PrimaryKeyConstraint('id_timetable', name='timetable_pkey'),
    sa.UniqueConstraint('name', name='timetable_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_timetable',
    sa.Column('id_user', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('id_timetable', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id_timetable'], ['timetable.id_timetable'], name='user_timetable_id_timetable_fkey'),
    sa.ForeignKeyConstraint(['id_user'], ['user.id_user'], name='user_timetable_id_user_fkey'),
    sa.PrimaryKeyConstraint('id_user', 'id_timetable', name='user_timetable_pkey')
    )
    op.create_table('location_timetable',
    sa.Column('id_location', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('id_timetable', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id_location'], ['location.id_location'], name='location_timetable_id_location_fkey'),
    sa.ForeignKeyConstraint(['id_timetable'], ['timetable.id_timetable'], name='location_timetable_id_timetable_fkey'),
    sa.PrimaryKeyConstraint('id_location', 'id_timetable', name='location_timetable_pkey')
    )
    op.create_table('date',
    sa.Column('id_date', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('id_timetable', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('id_medic', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('id_patient', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('id_station', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('id_location', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('day', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('from_hour', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('to_hour', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('presented', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id_location'], ['location.id_location'], name='date_id_location_fkey'),
    sa.ForeignKeyConstraint(['id_medic'], ['user.id_user'], name='date_id_medic_fkey'),
    sa.ForeignKeyConstraint(['id_patient'], ['patient.id_patient'], name='date_id_patient_fkey'),
    sa.ForeignKeyConstraint(['id_station'], ['station.id_station'], name='date_id_station_fkey'),
    sa.ForeignKeyConstraint(['id_timetable'], ['timetable.id_timetable'], name='date_id_timetable_fkey'),
    sa.PrimaryKeyConstraint('id_date', name='date_pkey')
    )
    # ### end Alembic commands ###
