"""empty message

Revision ID: 4c5ca58ec5b2
Revises: 703595187c52
Create Date: 2021-08-22 05:52:41.780779

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4c5ca58ec5b2'
down_revision = '703595187c52'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('location_timetable',
    sa.Column('id_location', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('id_timetable', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['id_location'], ['location.id_location'], ),
    sa.ForeignKeyConstraint(['id_timetable'], ['timetable.id_timetable'], ),
    sa.PrimaryKeyConstraint('id_location', 'id_timetable')
    )
    op.create_table('user_timetable',
    sa.Column('id_user', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('id_timetable', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['id_timetable'], ['timetable.id_timetable'], ),
    sa.ForeignKeyConstraint(['id_user'], ['user.id_user'], ),
    sa.PrimaryKeyConstraint('id_user', 'id_timetable')
    )
    op.create_table('date',
    sa.Column('id_date', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('id_timetable', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('id_medic', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('id_patient', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('id_station', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('id_location', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('day', sa.Date(), nullable=False),
    sa.Column('from_hour', sa.DateTime(), nullable=False),
    sa.Column('to_hour', sa.DateTime(), nullable=False),
    sa.Column('presented', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id_location'], ['location.id_location'], ),
    sa.ForeignKeyConstraint(['id_medic'], ['user.id_user'], ),
    sa.ForeignKeyConstraint(['id_patient'], ['patient.id_patient'], ),
    sa.ForeignKeyConstraint(['id_station'], ['station.id_station'], ),
    sa.ForeignKeyConstraint(['id_timetable'], ['timetable.id_timetable'], ),
    sa.PrimaryKeyConstraint('id_date')
    )
    op.drop_constraint('group_default_timetable_fkey', 'group', type_='foreignkey')
    op.drop_column('group', 'default_timetable')
    op.drop_constraint('location_timetable_fkey', 'location', type_='foreignkey')
    op.drop_column('location', 'timetable')
    op.add_column('timetable', sa.Column('priority', sa.Integer(), nullable=False))
    op.drop_constraint('user_timetable_fkey', 'user', type_='foreignkey')
    op.drop_column('user', 'timetable')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('timetable', postgresql.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('user_timetable_fkey', 'user', 'timetable', ['timetable'], ['id_timetable'])
    op.drop_column('timetable', 'priority')
    op.add_column('location', sa.Column('timetable', postgresql.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('location_timetable_fkey', 'location', 'timetable', ['timetable'], ['id_timetable'])
    op.add_column('group', sa.Column('default_timetable', postgresql.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('group_default_timetable_fkey', 'group', 'timetable', ['default_timetable'], ['id_timetable'])
    op.drop_table('date')
    op.drop_table('user_timetable')
    op.drop_table('location_timetable')
    # ### end Alembic commands ###
