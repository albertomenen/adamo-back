"""empty message

Revision ID: 466911378ff7
Revises: 
Create Date: 2021-08-20 03:00:38.876061

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '466911378ff7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blacklist_tokens',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token', sa.String(length=500), nullable=False),
    sa.Column('blacklisted_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('role',
    sa.Column('id_role', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('role_name', sa.String(length=50), nullable=False),
    sa.Column('role_code', sa.String(length=12), nullable=False),
    sa.Column('login_in_station', sa.Boolean(), nullable=True),
    sa.Column('manage_practice_manager', sa.Boolean(), nullable=True),
    sa.Column('manage_mp', sa.Boolean(), nullable=True),
    sa.Column('manage_nmp', sa.Boolean(), nullable=True),
    sa.Column('manage_patient', sa.Boolean(), nullable=True),
    sa.Column('manage_sysadmin', sa.Boolean(), nullable=True),
    sa.Column('manage_dev', sa.Boolean(), nullable=True),
    sa.Column('get_patient', sa.Boolean(), nullable=True),
    sa.Column('list_patient', sa.Boolean(), nullable=True),
    sa.Column('detail_patient', sa.Boolean(), nullable=True),
    sa.Column('manage_treatment', sa.Boolean(), nullable=True),
    sa.Column('run_sesion', sa.Boolean(), nullable=True),
    sa.Column('user_logout', sa.Boolean(), nullable=True),
    sa.Column('app_login', sa.Boolean(), nullable=True),
    sa.Column('manager_login', sa.Boolean(), nullable=True),
    sa.Column('app_select_patient', sa.Boolean(), nullable=True),
    sa.Column('app_detail_patient', sa.Boolean(), nullable=True),
    sa.Column('debug_app_hmi', sa.Boolean(), nullable=True),
    sa.Column('manage_station', sa.Boolean(), nullable=True),
    sa.Column('manage_group', sa.Boolean(), nullable=True),
    sa.Column('manage_location', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id_role')
    )
    op.create_table('system',
    sa.Column('id_system', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('system_name', sa.String(length=50), nullable=False),
    sa.Column('address', sa.String(length=150), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('town', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=12), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('contact_name', sa.String(length=100), nullable=False),
    sa.Column('state', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id_system'),
    sa.UniqueConstraint('email')
    )
    op.create_table('group',
    sa.Column('id_group', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('id_system', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('group_name', sa.String(length=50), nullable=False),
    sa.Column('address', sa.String(length=150), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('town', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=12), nullable=False),
    sa.Column('contact_name', sa.String(length=100), nullable=False),
    sa.Column('state', sa.Boolean(), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.ForeignKeyConstraint(['id_system'], ['system.id_system'], ),
    sa.PrimaryKeyConstraint('id_group'),
    sa.UniqueConstraint('email')
    )
    op.create_table('location',
    sa.Column('id_location', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('id_group', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('location_name', sa.String(length=50), nullable=False),
    sa.Column('address', sa.String(length=150), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('town', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=12), nullable=False),
    sa.Column('contact_name', sa.String(length=100), nullable=False),
    sa.Column('state', sa.Boolean(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.ForeignKeyConstraint(['id_group'], ['group.id_group'], ),
    sa.PrimaryKeyConstraint('id_location'),
    sa.UniqueConstraint('email')
    )
    op.create_table('user',
    sa.Column('id_user', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('id_group', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('user_name', sa.String(length=50), nullable=False),
    sa.Column('phone', sa.String(length=12), nullable=False),
    sa.Column('state', sa.Boolean(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('role_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['id_group'], ['group.id_group'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id_role'], ),
    sa.PrimaryKeyConstraint('id_user'),
    sa.UniqueConstraint('email')
    )
    op.create_table('patient',
    sa.Column('id_patient', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('id_user', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('address', sa.String(length=150), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('town', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=12), nullable=False),
    sa.Column('profession', sa.String(length=150), nullable=True),
    sa.Column('observations', sa.String(length=4000), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=False),
    sa.Column('identification', sa.String(length=9), nullable=False),
    sa.Column('state', sa.Boolean(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('active_treatments', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_user'], ['user.id_user'], ),
    sa.PrimaryKeyConstraint('id_patient'),
    sa.UniqueConstraint('email')
    )
    op.create_table('station',
    sa.Column('id_station', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('id_location', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('station_name', sa.String(length=50), nullable=False),
    sa.Column('state', sa.Boolean(), nullable=False),
    sa.Column('placed', sa.String(length=150), nullable=True),
    sa.Column('installation_date', sa.Date(), nullable=False),
    sa.Column('version', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['id_location'], ['location.id_location'], ),
    sa.PrimaryKeyConstraint('id_station')
    )
    op.create_table('device',
    sa.Column('id_device', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('mac', sa.String(length=50), nullable=False),
    sa.Column('serial_number', sa.String(length=50), nullable=False),
    sa.Column('hw_version', sa.String(length=12), nullable=False),
    sa.Column('sw_version', sa.String(length=12), nullable=False),
    sa.Column('device_name', sa.String(length=50), nullable=False),
    sa.Column('station_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('state', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['station_id'], ['station.id_station'], ),
    sa.PrimaryKeyConstraint('id_device'),
    sa.UniqueConstraint('mac'),
    sa.UniqueConstraint('serial_number')
    )
    op.create_table('palias',
    sa.Column('id_palias', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('patient', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['patient'], ['patient.id_patient'], ),
    sa.PrimaryKeyConstraint('id_palias')
    )
    op.create_table('treatment',
    sa.Column('id_treatment', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('id_patient', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('medic_name', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=45), nullable=False),
    sa.Column('sessions_number', sa.SmallInteger(), nullable=False),
    sa.Column('current_session_number', sa.SmallInteger(), nullable=False),
    sa.Column('notes', sa.String(length=4000), nullable=True),
    sa.Column('temperature', sa.SmallInteger(), nullable=False),
    sa.Column('ts_creation_date', sa.DateTime(), nullable=False),
    sa.Column('heating_duration', sa.REAL(), nullable=False),
    sa.Column('points', sa.String(length=10000), nullable=False),
    sa.Column('state', sa.Boolean(), nullable=False),
    sa.Column('ts_next_session', sa.REAL(), nullable=False),
    sa.Column('ts_end', sa.REAL(), nullable=False),
    sa.Column('width', sa.REAL(), nullable=False),
    sa.Column('height', sa.REAL(), nullable=False),
    sa.Column('ppx', sa.REAL(), nullable=False),
    sa.Column('ppy', sa.REAL(), nullable=False),
    sa.Column('fx', sa.REAL(), nullable=False),
    sa.Column('fy', sa.REAL(), nullable=False),
    sa.Column('model', sa.String(length=40), nullable=False),
    sa.Column('coeff', sa.String(length=100), nullable=False),
    sa.Column('depth_scale', sa.REAL(), nullable=False),
    sa.Column('mode', sa.String(length=45), nullable=False),
    sa.Column('extrinsics', sa.String(length=200), nullable=False),
    sa.Column('next_session_station_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('status', sa.String(length=12), nullable=False),
    sa.ForeignKeyConstraint(['id_patient'], ['palias.id_palias'], ),
    sa.ForeignKeyConstraint(['next_session_station_id'], ['station.id_station'], ),
    sa.PrimaryKeyConstraint('id_treatment')
    )
    op.create_table('session',
    sa.Column('id_session', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('medic_name', sa.String(length=50), nullable=False),
    sa.Column('points', sa.String(length=10000), nullable=False),
    sa.Column('ts_creation_date', sa.DateTime(), nullable=False),
    sa.Column('temperature', sa.SmallInteger(), nullable=False),
    sa.Column('session_number', sa.SmallInteger(), nullable=False),
    sa.Column('notes', sa.String(length=4000), nullable=True),
    sa.Column('device_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('station_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('treatment_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['device.id_device'], ),
    sa.ForeignKeyConstraint(['station_id'], ['station.id_station'], ),
    sa.ForeignKeyConstraint(['treatment_id'], ['treatment.id_treatment'], ),
    sa.PrimaryKeyConstraint('id_session'),
    sa.UniqueConstraint('medic_name')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('session')
    op.drop_table('treatment')
    op.drop_table('palias')
    op.drop_table('device')
    op.drop_table('station')
    op.drop_table('patient')
    op.drop_table('user')
    op.drop_table('location')
    op.drop_table('group')
    op.drop_table('system')
    op.drop_table('role')
    op.drop_table('blacklist_tokens')
    # ### end Alembic commands ###
